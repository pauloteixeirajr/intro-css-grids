/* Challenge with grid area names */
.challenge {
  width: 1000px;
  margin: 30px auto;

  display: grid;
  grid-template-rows: 100px 200px 400px 100px;
  grid-template-columns: repeat(3, 1fr) 200px;
  gap: 30px;

  /* a dot (.) will leave a grid area empty */
  grid-template-areas:
    "head head head head"
    "box1 box2 box3 side"
    "main main main side"
    "foot foot foot foot";
}

.challenge > * {
  background-color: orange;
  padding: 20px;
  color: #fff;
  font-size: 30px;
  font-family: sans-serif;
}

.small-box-1 {
  grid-area: box1;
}

.small-box-2 {
  grid-area: box2;
}

.small-box-3 {
  grid-area: box3;
}

.header {
  grid-area: head;
}

.sidebar {
  grid-area: side;
}

.main-content {
  grid-area: main;
}

.footer {
  grid-area: foot;
}

/* Introduction */
.container {
  background-color: #eee;
  width: 1000px;
  margin: 30px auto;

  display: grid;
  grid-template-rows: repeat(2, 150px);
  /* 1fr = 1 fraction of the available space */
  grid-template-columns: repeat(3, 1fr);

  /* Makes the 'middle' twice as big as the first and last columns */
  /* grid-template-columns: 1fr 2fr 1fr; */

  /* row-gap: 30px;
  column-gap: 30px; */
  gap: 30px;
}

.item {
  padding: 20px;
  font-size: 30px;
  font-family: sans-serif;
  color: #fff;
}

.item--1 {
  background-color: orange;
  /* grid-row-start: 2;
  grid-row-end: 3;
  grid-column-start: 2;
  grid-column-end: 3; */
  grid-row: 2 / 3;
  grid-column: 2 / 3;
}

.item--2 {
  background-color: yellowgreen;
  /* grid-column: 1 / span 2; */
  grid-column: 1 / -1;
}

.item--3 {
  background-color: blueviolet;
  /* Spans the column occupying 2 columns */
  grid-column: 1 / 3;
  /*
  This will hide item 1 as they are implicitly
  occupying the same grid cell
  */
  grid-row: 2 / 3;
}

.item--4 {
  background-color: palevioletred;
}

.item--5 {
  background-color: royalblue;
  /* grid-row: 1 / 2;
  grid-column: 3 / 4; */
  grid-area: 1 / 3 / 2 / 4;
}

.item--6 {
  background-color: goldenrod;
  grid-row: 1 / 2;
  grid-column: 2 / 3;
}
